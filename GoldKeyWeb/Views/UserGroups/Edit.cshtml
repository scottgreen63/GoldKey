@model GoldKeyLib.Entities.UserGroup


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>UserGroup</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        @Html.HiddenFor(model => model.UserGroupId)
        

        <div class="form-group">
            @Html.LabelFor(model => model.UserGroupCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserGroupCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserGroupCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserGroupName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserGroupName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserGroupName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div>
            <table class="table-condensed jtable-row-selected">
                <tr>
                    <th>FormName</th>
                    <th>C</th>
                    <th>R</th>
                    <th>U</th>
                    <th>D</th>
                    <th></th>
                </tr>

               
                    @for (var i = 0; i < Model.UserGroupPermissions.Count; ++i)

                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(model => model.UserGroupPermissions[i].FormName)
                                @Html.HiddenFor(model => model.UserGroupId)
                                @Html.HiddenFor(model => model.UserGroupPermissions[i].FormName)
                            </td>
                            <td>
                                @Html.CheckBoxFor(model => model.UserGroupPermissions[i].CanCreate)
                                @Html.HiddenFor(model => model.UserGroupId)
                                @Html.HiddenFor(model => model.UserGroupPermissions[i].CanCreate)
                            </td>
                            <td>
                                @Html.CheckBoxFor(model => model.UserGroupPermissions[i].CanRead)
                                @Html.HiddenFor(model => model.UserGroupId)
                                @Html.HiddenFor(model => model.UserGroupPermissions[i].CanRead)
                            </td>
                            <td>
                                @Html.CheckBoxFor(model => model.UserGroupPermissions[i].CanUpdate)
                                @Html.HiddenFor(model => model.UserGroupId)
                                @Html.HiddenFor(model => model.UserGroupPermissions[i].CanUpdate)
                            </td>
                            <td>
                                @Html.CheckBoxFor(model => model.UserGroupPermissions[i].CanDelete)
                                @Html.HiddenFor(model => model.UserGroupId)
                                @Html.HiddenFor(model => model.UserGroupPermissions[i].CanDelete)
                            </td>
                        </tr>
                    }
                </table>
            </div>
        
        @*@Html.Partial("_UserGroupPermissions", Model.UserGroupPermissions.ToList());*@



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
